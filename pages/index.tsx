import type { NextPage } from 'next';
import Head from 'next/head';
import { ChangeEvent } from 'react';

import ROOT_DATA from '../data';
import { CURRENT_YEAR } from '../configs';
import { getStatByYear } from '../utils';

import Layout from '../components/Layout';
import useUrlQuery from '../hooks/useUrlQuery';

type StatByPeriod = Record<Period, StatData>;

interface Props {
  data: StatByPeriod;
}

const PERIOD_TYPES: Period[] = ['올해', '최근 3년', '최근 5년', '최근 10년'];
const DEFAULT_PERIOD: Period = '올해';

const GENDER_TYPES: Gender[] = ['M', 'F'];
const DEFAULT_GENDER: Gender = 'M';

const IndexPage: NextPage<Props> = ({ data }) => {
  const { value: period, updateQuery: updatePeriod } = useUrlQuery<Period>({
    key: 'period',
    defaultValue: DEFAULT_PERIOD,
    shallow: true,
  });

  const { value: gender, updateQuery: updateGender } = useUrlQuery<Gender>({
    key: 'gender',
    defaultValue: DEFAULT_GENDER,
    shallow: true,
  });

  const handlePeriodChange = (e: ChangeEvent<HTMLSelectElement>) => {
    updatePeriod(e.target.value as Period);
  };

  const handleGenderChange = (e: ChangeEvent<HTMLSelectElement>) => {
    updateGender(e.target.value as Gender);
  };

  const periodOptions = PERIOD_TYPES.map((v) => (
    <option key={v} value={v}>
      {v}
    </option>
  ));

  const genderOptions = GENDER_TYPES.map((v) => (
    <option key={v} value={v}>
      {v}
    </option>
  ));

  const getDisplayStat = (gender: Gender) => {
    return (
      <div>
        {data[period][gender].map((v) => (
          <div key={v.name}>
            <span>{v.name} </span>
            <span>
              {v.count}
              {'명 '}
            </span>
            <span>
              {v.rank}
              {'위'}
            </span>
          </div>
        ))}
      </div>
    );
  };

  return (
    <>
      <Head>
        {/* TODO: Add more metadata */}
        <title>
          이름 순위 | {period} 가장 많았던{' '}
          {gender === 'M' ? '남자 이름' : '여자 이름'}
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <select value={period} onChange={handlePeriodChange}>
          {periodOptions}
        </select>
        <select value={gender} onChange={handleGenderChange}>
          {genderOptions}
        </select>
        <div style={{ display: 'flex' }}>{getDisplayStat(gender)}</div>
      </Layout>
    </>
  );
};

export default IndexPage;

export async function getStaticProps() {
  const endYear = CURRENT_YEAR;

  const data: StatByPeriod = {
    올해: getStatByYear({ startYear: CURRENT_YEAR, endYear, data: ROOT_DATA }),
    '최근 3년': getStatByYear({
      startYear: CURRENT_YEAR - 2,
      endYear,
      data: ROOT_DATA,
    }),
    '최근 5년': getStatByYear({
      startYear: CURRENT_YEAR - 4,
      endYear,
      data: ROOT_DATA,
    }),
    '최근 10년': getStatByYear({
      startYear: CURRENT_YEAR - 9,
      endYear,
      data: ROOT_DATA,
    }),
  };
  return {
    props: {
      data,
    },
  };
}
